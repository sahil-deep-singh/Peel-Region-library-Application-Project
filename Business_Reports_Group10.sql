--Final Project---
--Group 10--
---BUSSINESS REPORT SCRIPT FILE---
---MEMBER-1: SIMRAN KAUR---
---MEMBER-2: ANKITA CHANDEL---
---MEMBER-3: SAHIL DEEP SINGH---

--------------------------------------------------------------------------------
--BASIC QUERIES TO DISPLAY DATA OF ALL THE TABLES:
SELECT * FROM MEMBERS;
SELECT * FROM BOOKS;
SELECT * FROM L_EMPLOYEES;
SELECT * FROM EVENTS;
SELECT * FROM FEEDBACK;
SELECT * FROM BOOKBORROW;
SELECT * FROM ROOMBOOK;
--------------------------------------------------------------------------------
--------------------------VIEWS-----------------------------------------------
--View1: This view is created to get all data about the books which got feedback from members.
--here BOOK-ID , BOOk-Name, Book_Type, Book_Rating is displayed from tables books and feedback.
CREATE VIEW BOOKS_DESCRIPTION AS
SELECT DISTINCT b.BOOK_ID AS "BOOK-ID",
 b.BOOKNAME AS "BOOK-NAME",
 b.BOOK_TYPE as "BOOK-TYPE",
 f.BOOKRATING as "BOOK-RATING"
FROM BOOKS b 
INNER JOIN FEEDBACK f
ON b.BOOKNAME = f.BOOKNAME;

--Query to display view BOOKS_DISCRIPTION Created above.
SELECT * FROM BOOKS_DESCRIPTION;

--------------------------------------------------------------------------------
--VIEW-2: This view is created to get information about event and the employee assigned to that event. 
--Also date, time of event along with the contact details of employees are displayed.
CREATE VIEW eve_emp AS
(SELECT Emp.EMPLOYEE_ID,Emp.EMPLOYEENAME,Emp.EMAIL,Eve.EVENTNAME,Eve.E_DATE,Eve.E_TIME
FROM  L_EMPLOYEES Emp, EVENTS Eve
WHERE Emp.EMPLOYEE_ID=Eve.EMPLOYEE_ID);

--Query to display the view eve_emp created above:
SELECT * FROM eve_emp order by E_DATE,E_TIME;

--------------------------------------------------------------------------------
--View-3: THIS VIEW IS CREATED TO GET INFORMATION ABOUT THE EMPLOYEES WHO GOT FEEDBACK.
-- ALSO THIER RATING IS DISPLAYED IN RATING COLUMN.
CREATE VIEW FB_4_EMP AS
SELECT EMP.EMPLOYEE_ID AS "EMPLOYEE-ID",
EMP.JOB_TYPE AS "JOB-TYPE",
EMP.EMAIL,
F.EMPLOYEERATING AS "RATING"
FROM L_EMPLOYEES EMP, FEEDBACK F
WHERE EMP.EMPLOYEENAME = F.EMPLOYEENAME;

--QUERY TO DISPLAY VIEW CREATED ABOVE ALONG WITH THE NAME OF THE EMPLOYEE.
SELECT E.EMPLOYEENAME , EM.*
FROM l_employees E, FB_4_EMP EM
WHERE E.EMAIL = EM.EMAIL; 

---QUERY TO DISPLAY VIEW CREATED ABOVE, ALSO A SUB QUERY IS USED TO DISPLAY 
--THE EMPLOYEES HAVING HIGHEST RATING.
SELECT E.EMPLOYEENAME , EM.*
FROM l_employees E, FB_4_EMP EM
WHERE E.EMAIL = EM.EMAIL AND RATING = (SELECT MAX(RATING) FROM FB_4_EMP);

--------------------------------------------------------------------------------
--VIEW 4: THIS VIEW IS CREATED TO GET INFORMATION ABOUT THE MEMBER WHO BORROWED A BOOK.
--ALSO THE MEMBER DETAILS, BOOK DETAILS ALONG WITH BORROWED DATE ARE DISPLAYED.
CREATE VIEW mem_bb AS
SELECT mem.MEMBER_ID,
mem.FULLNAME,
mem.EMAIL,
mem.M_CATEGORY,
b.BOOK_ID,
b.BORROW_DATE
FROM MEMBERS mem 
INNER JOIN BOOKBORROW b
ON mem.MEMBER_ID=b.MEMBER_ID;

--QUERY: THIS QUERY IS USED TO DISPLAY ABOVE CREATED VIEW.
--ALSO THE DATA DISPLAYED IS ORDERED BY THE BORROW_DATE COLUMN IN THE VIEW.
SELECT 
BB.MEMBER_ID, 
BB.FULLNAME, 
BB.EMAIL, 
BB.M_CATEGORY, 
BB.BOOK_ID,
B.BOOKNAME,
BB.BORROW_DATE
FROM mem_bb BB, BOOKS B 
WHERE BB.BOOK_ID = B.BOOK_ID
ORDER BY BORROW_DATE;


--------------------------------------------------------------------------------
--ADDITIONAL QUERIES:
--QUERY1: THIS QUERY IS USED TO DISPLAY THE MAXIMUM AND MINIMUM AGE OF THE MEMBER OF 
--CATEGORY TEENAGER.
SELECT MAX(AGE),MIN(AGE) FROM MEMBERS WHERE M_CATEGORY='Teenager';
DROP VIEW BOOKS_DESCRIPTION;

--QUERY2: THIS QUERY IS USED TO DISPLAY THE INFORMATION ABOUT THE ELEDEST MEMBER OF THE LIBRARY.
select MEMBER_ID,AGE  FROM MEMBERS
WHERE AGE=(SELECT MAX(AGE) FROM MEMBERS);

