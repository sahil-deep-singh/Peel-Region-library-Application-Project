---fINAL PROJECT---
---GROUP 10----
---CREATIONSCRIPT FILE---
---MEMBER-1: SIMRAN KAUR---
---MEMBER-2: ANKITA CHANDEL---
---MEMBER-3: SAHIL DEEP SINGH---

--TABLE1: TABLE MEMBERS CREATED.
CREATE TABLE MEMBERS (
Member_ID NUMBER(4),
FULLNAME  VARCHAR(25) NOT NULL,
AGE       NUMBER(25),
PHONENUMBER NUMBER(11),
EMAIL       VARCHAR(50),
ADDRESS     VARCHAR(50),
M_CATEGORY  VARCHAR(30),
constraint pk_members primary key (Member_ID)
);

--TABLE2: TABLE BOOKS CREATED.
CREATE TABLE BOOKS (
BOOK_ID NUMBER(5),
BOOKNAME  VARCHAR(50) NOT NULL UNIQUE,
BOOK_TYPE VARCHAR(30),
AVAIALBILITY VARCHAR(2),  
AUTHORNAME   VARCHAR(50),
constraint pk_BOOKS primary key (BOOK_ID),
constraint avail_ck CHECK (AVAIALBILITY IN ('Y','N'))
);

--TABLE3: TABLE EMPLOYEES CREATED.
CREATE TABLE L_EMPLOYEES (
EMPLOYEE_ID NUMBER(4),
EMPLOYEENAME  VARCHAR(30) NOT NULL UNIQUE,
JOB_TYPE VARCHAR(25),
AGE NUMBER(3),  
PHONENUMBER  NUMBER(11),
EMAIL   VARCHAR(50),
constraint pk_EMPLOYEE primary key (EMPLOYEE_ID)
);

--TABLE4: TABLE EVENTS CREATED.
CREATE TABLE EVENTS (
EVENTNAME VARCHAR(50),
E_DATE  DATE,
E_TIME  VARCHAR(20),
EMPLOYEE_ID NUMBER(4),  
M_CATEGORY   VARCHAR(30),
constraint pk_EVENTS primary key (EVENTNAME),
constraint fk_employeeID FOREIGN KEY (EMPLOYEE_ID) REFERENCES L_EMPLOYEES (EMPLOYEE_ID)
);

--TABLE5: TABLE FEEDBACK CREATED
CREATE TABLE FEEDBACK (
SERIAL_NUMBER NUMBER(4),
BOOKNAME  VARCHAR(20),
MEMBER_ID  NUMBER(4),
EMPLOYEENAME VARCHAR(30),  
BOOKRATING   NUMBER(2),
EMPLOYEERATING NUMBER(2),
constraint pk_FEEDBACK primary key (SERIAL_NUMBER),
constraint fk_FEEDBOOK FOREIGN KEY (BOOKNAME) REFERENCES BOOKS (BOOKNAME),
constraint fk_FEEDMEMBER   FOREIGN KEY (Member_ID) REFERENCES MEMBERS (Member_ID),
constraint fk_feedemployee FOREIGN KEY (EMPLOYEENAME) REFERENCES L_EMPLOYEES (EMPLOYEENAME)
);

--TABLE6: TABLE BOOKBORROW CREATED.
CREATE TABLE BOOKBORROW (
BOOK_ID NUMBER(5),
MEMBER_ID  NUMBER(4),
BORROW_DATE DATE,
DUE_DATE DATE,  
EMAIL VARCHAR(50) ,
constraint pk_BORROWBOOK primary key (BOOK_ID),
constraint fk_borrowmember foreign key (Member_ID) REFERENCES MEMBERS (Member_ID)
);

--TABLE7: ROOMBOOK CREATED.
CREATE TABLE ROOMBOOK (
ROOM_NO NUMBER(2),
ROOM_TYPE  VARCHAR(50),
EVENTNAME VARCHAR(50),
R_dATE DATE,  
R_TIME VARCHAR(20),
TIME_DURATION VARCHAR2(20),
MEMBER_ID NUMBER(4),
constraint pk_ROOM primary key(ROOM_NO),
constraint fk_ROOMEVENT foreign key (EVENTNAME) REFERENCES EVENTS (EVENTNAME),
constraint fk_ROOMMEMID foreign key (Member_ID) REFERENCES MEMBERS(Member_ID)
);

--BRIDGE TABLES ARE CREATED BELOW:
--TABLE8: MemberBook_borrow created.
CREATE TABLE MemberBook_borrow (
Member_ID Number,
BOOK_ID  number,
constraint pk_MemBook primary key(Member_ID, BOOK_ID),
constraint fk_mem foreign key (Member_ID) REFERENCES MEMBERS (Member_ID),
constraint fk_bb foreign key (BOOK_ID) REFERENCES BOOKBORROW (BOOK_ID)
);

--TABLE9: Employees_Event created.
CREATE TABLE Employees_Event (
Employee_ID Number(4),
EventName  Varchar(50),
constraint pk_EmpEve primary key(Employee_ID, EventName),
constraint fk_emp foreign key (Employee_ID) REFERENCES L_EMPLOYEES (EMPLOYEE_ID),
constraint fk_EVE foreign key (EventName) REFERENCES EVENTS (EVENTNAME)
);

--STATEMENTS TO DROP TABLES IN THE ORDER ARE PROVIDED BELOW:
DROP TABLE Employees_Event;
DROP TABLE MemberBook_borrow;
DROP TABLE ROOMBOOK;
DROP TABLE EVENTS;
DROP TABLE BOOKBORROW;
DROP TABLE FEEDBACK;
Drop table BOOKS;
Drop table L_EMPLOYEES;
DROP TABLE MEMBERS;
